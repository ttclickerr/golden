
/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Google AdMob
 */

export enum AdMobAdType {
  BANNER = 'banner',
  INTERSTITIAL = 'interstitial', 
  REWARDED = 'rewarded',
  REWARDED_INTERSTITIAL = 'rewarded_interstitial',
  APP_OPEN = 'app_open'
}

export enum AdMobAdSize {
  BANNER = 'BANNER', // 320x50
  LARGE_BANNER = 'LARGE_BANNER', // 320x100  
  MEDIUM_RECTANGLE = 'MEDIUM_RECTANGLE', // 300x250
  FULL_BANNER = 'FULL_BANNER', // 468x60
  LEADERBOARD = 'LEADERBOARD', // 728x90
  SMART_BANNER = 'SMART_BANNER' // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä
}

interface AdMobConfig {
  applicationId: string;
  testDeviceIds: string[];
  adUnits: {
    banner: string;
    interstitial: string;
    rewarded: string;
    rewardedInterstitial: string;
    appOpen: string;
  };
}

interface AdReward {
  type: string;
  amount: number;
}

class AdMobService {
  private isInitialized: boolean = false;
  private config: AdMobConfig;
  private adLoadedStates: Record<string, boolean> = {};
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã
  private settings = {
    interstitialCooldown: 60000, // 1 –º–∏–Ω—É—Ç–∞ –º–µ–∂–¥—É –ø–æ–∫–∞–∑–∞–º–∏
    maxBannerRefreshRate: 30000, // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫
    rewardedAdPreload: true, // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ rewarded —Ä–µ–∫–ª–∞–º—ã
  };

  private lastInterstitialTime: number = 0;

  constructor() {
    this.config = {
      // ID –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è AdMob  
      applicationId: process.env.REACT_APP_ADMOB_APP_ID || 'ca-app-pub-3940256099942544~3347511713',
      
      // –¢–µ—Å—Ç–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
      testDeviceIds: [
        'EMULATOR', // –≠–º—É–ª—è—Ç–æ—Ä –≤—Å–µ–≥–¥–∞ —Ç–µ—Å—Ç–æ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        process.env.REACT_APP_ADMOB_TEST_DEVICE || ''
      ].filter(Boolean),

      // ID —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–ª–æ–∫–æ–≤
      adUnits: {
        banner: process.env.REACT_APP_ADMOB_BANNER || 'ca-app-pub-3940256099942544/6300978111',
        interstitial: process.env.REACT_APP_ADMOB_INTERSTITIAL || 'ca-app-pub-3940256099942544/1033173712',
        rewarded: process.env.REACT_APP_ADMOB_REWARDED || 'ca-app-pub-3940256099942544/5224354917',
        rewardedInterstitial: process.env.REACT_APP_ADMOB_REWARDED_INTERSTITIAL || 'ca-app-pub-3940256099942544/5354046379',
        appOpen: process.env.REACT_APP_ADMOB_APP_OPEN || 'ca-app-pub-3940256099942544/3419835294'
      }
    };
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AdMob
   */
  async initialize(): Promise<boolean> {
    if (this.isInitialized) return true;

    console.log('üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AdMob SDK');

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ AdMob –≤ window (–¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç Google Adsense)
      if (typeof window !== 'undefined' && (window as any).googletag) {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Ad Manager –¥–ª—è –≤–µ–±
        (window as any).googletag.cmd.push(() => {
          (window as any).googletag.pubads().enableSingleRequest();
          (window as any).googletag.pubads().disableInitialLoad();
          (window as any).googletag.enableServices();
        });

        console.log('‚úÖ Google Ad Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –≤–µ–±');
      } else if (typeof window !== 'undefined' && (window as any).AdMob) {
        // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        await (window as any).AdMob.initialize({
          applicationId: this.config.applicationId,
          testDeviceIds: this.config.testDeviceIds,
          initializeForTesting: process.env.NODE_ENV !== 'production'
        });

        console.log('‚úÖ AdMob SDK –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      } else {
        console.log('‚ö†Ô∏è AdMob SDK –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É');
      }

      this.isInitialized = true;
      await this.preloadAds();
      return true;

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AdMob:', error);
      return false;
    }
  }

  /**
   * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–ª–∞–º—ã
   */
  private async preloadAds(): Promise<void> {
    if (!this.isInitialized) return;

    try {
      // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã —Ä–µ–∫–ª–∞–º—ã
      await Promise.all([
        this.loadInterstitialAd(),
        this.loadRewardedAd(),
        this.loadAppOpenAd()
      ]);

      console.log('‚úÖ –†–µ–∫–ª–∞–º–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–ª–∞–º—ã:', error);
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–∫–∞–∑ –±–∞–Ω–Ω–µ—Ä–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã
   */
  async showBannerAd(
    containerId: string, 
    size: AdMobAdSize = AdMobAdSize.SMART_BANNER
  ): Promise<boolean> {
    if (!this.isInitialized) return false;

    try {
      console.log(`üì± –ü–æ–∫–∞–∑ –±–∞–Ω–Ω–µ—Ä–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ: ${containerId}`);

      if (typeof window !== 'undefined' && (window as any).googletag) {
        // –í–µ–±-–≤–µ—Ä—Å–∏—è —Å Google Ad Manager
        const slot = (window as any).googletag.defineSlot(
          this.config.adUnits.banner,
          [[320, 50], [728, 90], [300, 250]], // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
          containerId
        ).addService((window as any).googletag.pubads());

        (window as any).googletag.display(containerId);
        (window as any).googletag.pubads().refresh([slot]);

        return true;
      } else if (typeof window !== 'undefined' && (window as any).AdMob) {
        // –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
        await (window as any).AdMob.showBanner({
          adUnitId: this.config.adUnits.banner,
          adSize: size,
          position: 'bottom'
        });

        return true;
      } else {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        console.log(`üìä [Mock] Banner Ad –ø–æ–∫–∞–∑–∞–Ω –≤ ${containerId}`);
        return true;
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –±–∞–Ω–Ω–µ—Ä–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã:', error);
      return false;
    }
  }

  /**
   * –°–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–Ω–µ—Ä–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã
   */
  async hideBannerAd(): Promise<void> {
    if (!this.isInitialized) return;

    try {
      if (typeof window !== 'undefined' && (window as any).AdMob) {
        await (window as any).AdMob.hideBanner();
      }
      console.log('üì± –ë–∞–Ω–Ω–µ—Ä–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ —Å–∫—Ä—ã—Ç–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä—ã—Ç–∏—è –±–∞–Ω–Ω–µ—Ä–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã:', error);
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã
   */
  async loadInterstitialAd(): Promise<boolean> {
    if (!this.isInitialized) return false;

    try {
      console.log('üì± –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã');

      if (typeof window !== 'undefined' && (window as any).AdMob) {
        await (window as any).AdMob.prepareInterstitial({
          adUnitId: this.config.adUnits.interstitial
        });
      }

      this.adLoadedStates['interstitial'] = true;
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã:', error);
      return false;
    }
  }

  /**
   * –ü–æ–∫–∞–∑ –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã
   */
  async showInterstitialAd(): Promise<boolean> {
    if (!this.isInitialized) return false;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
    const now = Date.now();
    if (now - this.lastInterstitialTime < this.settings.interstitialCooldown) {
      console.log('‚è∞ –ú–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ');
      return false;
    }

    try {
      console.log('üì± –ü–æ–∫–∞–∑ –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã');

      if (typeof window !== 'undefined' && (window as any).AdMob) {
        await (window as any).AdMob.showInterstitial();
      } else {
        console.log('üìä [Mock] Interstitial Ad –ø–æ–∫–∞–∑–∞–Ω');
      }

      this.lastInterstitialTime = now;
      this.adLoadedStates['interstitial'] = false;
      
      // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ä–µ–∫–ª–∞–º—É
      setTimeout(() => this.loadInterstitialAd(), 1000);

      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã:', error);
      return false;
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–ª–∞–º—ã —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º
   */
  async loadRewardedAd(): Promise<boolean> {
    if (!this.isInitialized) return false;

    try {
      console.log('üì± –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–ª–∞–º—ã —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º');

      if (typeof window !== 'undefined' && (window as any).AdMob) {
        await (window as any).AdMob.prepareRewardVideo({
          adUnitId: this.config.adUnits.rewarded
        });
      }

      this.adLoadedStates['rewarded'] = true;
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–ª–∞–º—ã —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º:', error);
      return false;
    }
  }

  /**
   * –ü–æ–∫–∞–∑ —Ä–µ–∫–ª–∞–º—ã —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º
   */
  async showRewardedAd(): Promise<AdReward | null> {
    if (!this.isInitialized || !this.adLoadedStates['rewarded']) {
      return null;
    }

    try {
      console.log('üì± –ü–æ–∫–∞–∑ —Ä–µ–∫–ª–∞–º—ã —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º');

      if (typeof window !== 'undefined' && (window as any).AdMob) {
        const result = await (window as any).AdMob.showRewardVideo();
        
        if (result.rewardGranted) {
          this.adLoadedStates['rewarded'] = false;
          setTimeout(() => this.loadRewardedAd(), 1000);
          
          return {
            type: result.rewardType || 'coin',
            amount: result.rewardAmount || 1
          };
        }
      } else {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        console.log('üìä [Mock] Rewarded Ad –ø–æ–∫–∞–∑–∞–Ω');
        return { type: 'coin', amount: 1 };
      }

      return null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Ä–µ–∫–ª–∞–º—ã —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º:', error);
      return null;
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–ª–∞–º—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  async loadAppOpenAd(): Promise<boolean> {
    if (!this.isInitialized) return false;

    try {
      console.log('üì± –ó–∞–≥—Ä—É–∑–∫–∞ App Open —Ä–µ–∫–ª–∞–º—ã');
      // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è App Open —Ä–µ–∫–ª–∞–º—ã
      this.adLoadedStates['appOpen'] = true;
      return true;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ App Open —Ä–µ–∫–ª–∞–º—ã:', error);
      return false;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º—ã
   */
  isAdReady(adType: AdMobAdType): boolean {
    return this.adLoadedStates[adType] || false;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ–∫–ª–∞–º—ã
   */
  getAdStats(): Record<string, any> {
    return {
      initialized: this.isInitialized,
      loadedAds: this.adLoadedStates,
      lastInterstitialTime: this.lastInterstitialTime,
      settings: this.settings
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Å–∏–Ω–≥–ª—Ç–æ–Ω–∞
export const adMobService = new AdMobService();
