import { useState, useEffect } from 'react';
import { User } from 'firebase/auth';
import { onAuthStateChange, signInWithGoogle, signOutUser, FirebaseGameService } from '@/services/firebase';

export const useAuth = () => {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const unsubscribe = onAuthStateChange(async (user) => {
      setUser(user);
      if (user) {
        console.log('üîê User signed in:', user.displayName || user.email);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ –∏ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –≤—Ö–æ–¥–µ
        try {
          // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∫—É–ø–∫–∏
          const restoreResult = await FirebaseGameService.restorePurchases(user.uid);
          if (restoreResult.success) {
            console.log(`üîÑ Premium ${restoreResult.type} status restored automatically`);
          }
          
          // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          const gameState = await FirebaseGameService.loadGameState(user.uid);
          if (gameState) {
            console.log('üîÑ Game state restored from cloud:', gameState);
            localStorage.setItem('tycoon-clicker-save', JSON.stringify(gameState));
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
            window.location.reload();
          }
        } catch (error) {
          console.error('‚ùå Failed to restore data:', error);
        }
      } else {
        console.log('üîê User signed out');
      }
      setLoading(false);
    });

    return () => unsubscribe();
  }, []);

  const signIn = async () => {
    try {
      setError(null);
      setLoading(true);
      const user = await signInWithGoogle();
      console.log('‚úÖ Successfully signed in');
      return user;
    } catch (error: any) {
      // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–ª –æ–∫–Ω–æ
      if (error.code !== 'auth/popup-closed-by-user') {
        setError(error.message);
        console.error('‚ùå Sign in failed:', error);
        throw error;
      } else {
        console.log('üîê User cancelled sign in');
      }
    } finally {
      setLoading(false);
    }
  };

  const signOut = async () => {
    try {
      setError(null);
      await signOutUser();
      console.log('‚úÖ Successfully signed out');
    } catch (error: any) {
      setError(error.message);
      console.error('‚ùå Sign out failed:', error);
      throw error;
    }
  };

  return {
    user,
    loading,
    error,
    signIn,
    signOut,
    isAuthenticated: !!user,
  };
};