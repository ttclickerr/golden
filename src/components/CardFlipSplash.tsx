import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";

// –¢–∏–ø—ã –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º—ã
declare global {
  interface Window {
    admob: any;
  }
}

interface CardFlipSplashProps {
  onComplete: () => void;
  playerLevel?: number;
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º—ã - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–≥—Ä—É–∑–∫–µ
const checkAdReadiness = (): Promise<void> => {
  return new Promise((resolve) => {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º—ã...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å AdMob (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    const checkAdMob = () => {
      if (window.admob) {
        console.log('‚úÖ AdMob –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫–∞–∑—É');
        return true;
      }
      return false;
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å Google AdSense
    const checkAdSense = () => {
      if (window.adsbygoogle && (window.adsbygoogle as any).loaded) {
        console.log('‚úÖ AdSense –≥–æ—Ç–æ–≤ –∫ –ø–æ–∫–∞–∑—É');
        return true;
      }
      return false;
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ª—é–±—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ
    const checkAdScripts = () => {
      const adScripts = document.querySelectorAll('script[src*="googlesyndication"], script[src*="adnxs"], script[src*="adsystem"]');
      return adScripts.length > 0;
    };

    // –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–ª–∞–º—ã
    const maxWaitTime = 3000;
    const startTime = Date.now();
    let checkCount = 0;
    
    const checkAds = () => {
      checkCount++;
      const elapsed = Date.now() - startTime;
      
      if (checkCount % 10 === 0) {
        console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∫–ª–∞–º—ã #${checkCount}, –ø—Ä–æ—à–ª–æ ${elapsed}–º—Å`);
      }
      
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: AdMob > AdSense > —Å–∫—Ä–∏–ø—Ç—ã > —Ç–∞–π–º–∞—É—Ç
      if (checkAdMob()) {
        console.log('üéØ AdMob –∑–∞–≥—Ä—É–∂–µ–Ω –ø–µ—Ä–≤—ã–º, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É');
        resolve();
        return;
      }
      
      if (checkAdSense()) {
        console.log('üéØ AdSense –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É');
        resolve();
        return;
      }
      
      if (checkAdScripts() && elapsed > 1000) {
        console.log('üìù –†–µ–∫–ª–∞–º–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');
        resolve();
        return;
      }
      
      if (elapsed >= maxWaitTime) {
        console.log('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã –∏—Å—Ç–µ–∫–ª–æ, –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑ –Ω–µ—ë');
        resolve();
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—â–µ –≤ –Ω–∞—á–∞–ª–µ, —Ä–µ–∂–µ –ø–æ—Ç–æ–º
      const interval = elapsed < 1000 ? 50 : 150;
      setTimeout(checkAds, interval);
    };
    
    checkAds();
  });
};

// –ö–æ—Ä–æ—Ç–∫–∏–µ —Å–º–µ—à–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
const splashQuotes = {
  en: ["Money grows on screens!", "Tap to get rich!", "Warning: Addictive!", "Your finger = ATM", "Capitalism loading..."],
  zh: ["ÈáëÈí±Âú®Â±èÂπï‰∏äÁîüÈïøÔºÅ", "ÁÇπÂáªËá¥ÂØåÔºÅ", "Ë≠¶ÂëäÔºö‰∏äÁòæÔºÅ", "ÊâãÊåá=ÂèñÊ¨æÊú∫", "ËµÑÊú¨‰∏ª‰πâÂä†ËΩΩ‰∏≠..."],
  ja: ["„ÅäÈáë„ÅåÁîªÈù¢„Å´Áîü„Åà„ÇãÔºÅ", "„Çø„ÉÉ„Éó„Åß‰∏ÄÊî´ÂçÉÈáëÔºÅ", "Ë≠¶ÂëäÔºö‰∏≠ÊØíÊÄßÔºÅ", "Êåá=ATM", "Ë≥áÊú¨‰∏ªÁæ©Ë™≠„ÅøËæº„Åø‰∏≠..."],
  es: ["¬°Dinero crece en pantallas!", "¬°Toca para ser rico!", "¬°Advertencia: Adictivo!", "Tu dedo = Cajero", "Cargando capitalismo..."],
  de: ["Geld w√§chst auf Bildschirmen!", "Tippe f√ºr Reichtum!", "Warnung: S√ºchtig!", "Dein Finger = Geldautomat", "Kapitalismus l√§dt..."],
  fr: ["L'argent pousse sur √©crans!", "Tapez pour √™tre riche!", "Attention: Addictif!", "Votre doigt = Distributeur", "Capitalisme en cours..."],
  pt: ["Dinheiro cresce nas telas!", "Toque para ficar rico!", "Aviso: Viciante!", "Seu dedo = Caixa eletr√¥nico", "Carregando capitalismo..."],
  it: ["I soldi crescono sui schermi!", "Tocca per arricchirti!", "Attenzione: Crea dipendenza!", "Il tuo dito = Bancomat", "Caricamento capitalismo..."]
};

const loadingSteps = {
  en: ["Initializing capitalism...", "Loading market data...", "Connecting to Wall Street...", "Calculating profits...", "Ready to make money!"],
  zh: ["ÂàùÂßãÂåñËµÑÊú¨‰∏ª‰πâ...", "Âä†ËΩΩÂ∏ÇÂú∫Êï∞ÊçÆ...", "ËøûÊé•ÂçéÂ∞îË°ó...", "ËÆ°ÁÆóÂà©Ê∂¶...", "ÂáÜÂ§áËµöÈí±ÔºÅ"],
  ja: ["Ë≥áÊú¨‰∏ªÁæ©ÂàùÊúüÂåñ‰∏≠...", "Â∏ÇÂ†¥„Éá„Éº„ÇøË™≠„ÅøËæº„Åø‰∏≠...", "„Ç¶„Ç©„Éº„É´Ë°óÊé•Á∂ö‰∏≠...", "Âà©ÁõäË®àÁÆó‰∏≠...", "„ÅäÈáë„ÇíÁ®º„ÅêÊ∫ñÂÇôÂÆå‰∫ÜÔºÅ"],
  es: ["Inicializando capitalismo...", "Cargando datos del mercado...", "Conectando a Wall Street...", "Calculando ganancias...", "¬°Listo para ganar dinero!"],
  de: ["Kapitalismus wird initialisiert...", "Marktdaten werden geladen...", "Verbindung zur Wall Street...", "Gewinne werden berechnet...", "Bereit, Geld zu verdienen!"],
  fr: ["Initialisation du capitalisme...", "Chargement des donn√©es de march√©...", "Connexion √† Wall Street...", "Calcul des profits...", "Pr√™t √† gagner de l'argent!"],
  pt: ["Inicializando capitalismo...", "Carregando dados do mercado...", "Conectando √† Wall Street...", "Calculando lucros...", "Pronto para ganhar dinheiro!"],
  it: ["Inizializzazione capitalismo...", "Caricamento dati di mercato...", "Connessione a Wall Street...", "Calcolo profitti...", "Pronto a fare soldi!"]
};

export default function CardFlipSplash({ onComplete, playerLevel = 1 }: CardFlipSplashProps) {
  const [progress, setProgress] = useState(0);
  const [currentStep, setCurrentStep] = useState("");
  const [isFlipping, setIsFlipping] = useState(false);
  const [currentQuote, setCurrentQuote] = useState("");
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —É—Ä–æ–≤–Ω—è –∏–≥—Ä–æ–∫–∞
  const isNewPlayer = (playerLevel || 1) === 1;
  const showFullAnimation = !isNewPlayer;

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –∏–∑ localStorage –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const getCurrentLanguage = () => {
    const saved = localStorage.getItem('gameLanguage');
    return saved && splashQuotes[saved as keyof typeof splashQuotes] ? saved : 'en';
  };
  
  const language = getCurrentLanguage();
  const quotes = splashQuotes[language as keyof typeof splashQuotes];
  const steps = loadingSteps[language as keyof typeof loadingSteps];

  useEffect(() => {
    // –î–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ (—É—Ä–æ–≤–µ–Ω—å 1) - –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –±–µ–∑ —Ñ–∞–Ω—Ñ–∞—Ä–æ–≤
    if (isNewPlayer) {
      console.log('üë∂ –ù–æ–≤—ã–π –∏–≥—Ä–æ–∫: –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π');
      
      // –ë—ã—Å—Ç—Ä–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
      setTimeout(() => {
        setProgress(100);
        setCurrentStep(steps[steps.length - 1]);
        setIsFlipping(true);
        setTimeout(() => onComplete(), 500);
      }, 800);
      
      return;
    }
    
    // –ü–æ–ª–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ (—É—Ä–æ–≤–µ–Ω—å 2+)
    console.log('üéâ –û–ø—ã—Ç–Ω—ã–π –∏–≥—Ä–æ–∫: –ø–æ–ª–Ω—ã–µ —Ñ–∞–Ω—Ñ–∞—Ä—ã –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∫–ª–∞–º—É —Å—Ä–∞–∑—É –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∑–∞—Å—Ç–∞–≤–∫–∏
    const initializeAds = () => {
      console.log('üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å AdMob
      if (window.admob) {
        console.log('‚úÖ AdMob —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –≥–æ—Ç–æ–≤');
        try {
          // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω—É—é —Ä–µ–∫–ª–∞–º—É
          if (window.admob.interstitial) {
            console.log('üéØ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –º–µ–∂—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã...');
          }
        } catch (error) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ AdMob:', error);
        }
      } else {
        console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AdMob...');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º AdSense –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É
      if (window.adsbygoogle) {
        console.log('‚úÖ Google AdSense –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
        try {
          (window.adsbygoogle as any).loaded = true;
        } catch (error) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AdSense:', error);
        }
      } else {
        console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ Google AdSense...');
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º—ã –≤ —Ñ–æ–Ω–µ
      setTimeout(() => {
        checkAdReadiness().then(() => {
          console.log('üéâ –†–µ–∫–ª–∞–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã –∫ –ø–æ–∫–∞–∑—É');
        });
      }, 500);

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∫–ª–∞–º—É –Ω–∞ –∑–∞—Å—Ç–∞–≤–∫–µ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
      setTimeout(() => {
        try {
          if (window.adsbygoogle) {
            (window.adsbygoogle as any).push({});
            console.log('üì∫ –†–µ–∫–ª–∞–º–∞ –Ω–∞ –∑–∞—Å—Ç–∞–≤–∫–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
          }
        } catch (error) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º—ã –Ω–∞ –∑–∞—Å—Ç–∞–≤–∫–µ:', error);
        }
      }, 1500);
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ä–µ–∫–ª–∞–º—ã
    initializeAds();
    
    const interval = setInterval(() => {
      setProgress(prev => {
        const newProgress = prev + Math.random() * 8 + 3;
        const stepIndex = Math.floor((newProgress / 100) * steps.length);
        const quoteIndex = Math.floor((newProgress / 100) * quotes.length);
        
        if (stepIndex < steps.length) {
          setCurrentStep(steps[stepIndex]);
        }
        // –°–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        const randomQuoteIndex = Math.floor(Math.random() * quotes.length);
        setCurrentQuote(quotes[randomQuoteIndex]);

        if (newProgress >= 100) {
          clearInterval(interval);
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
          checkAdReadiness().then(() => {
            setIsFlipping(true);
            // –ü—Ä–æ—Å—Ç–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
            setTimeout(() => onComplete(), 1500);
          });
          return 100;
        }
        return newProgress;
      });
    }, 250);

    return () => clearInterval(interval);
  }, [onComplete, steps, quotes, isNewPlayer]);

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ 
          opacity: isFlipping ? 0 : 1,
          filter: isFlipping ? "blur(20px)" : "blur(0px)"
        }}
        exit={{ 
          opacity: 0,
          filter: "blur(10px)"
        }}
        transition={{ 
          duration: isFlipping ? 1.2 : 0.8,
          ease: [0.23, 1, 0.32, 1]
        }}
        className="fixed inset-0 z-50 bg-gradient-to-br from-slate-900 via-slate-800 to-yellow-900/20"
      >
        {/* Animated Background Grid - —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ */}
        {showFullAnimation && (
          <div className="absolute inset-0 opacity-20">
            <div 
              className="absolute inset-0"
              style={{
                backgroundImage: `
                  linear-gradient(rgba(76, 195, 165, 0.15) 1px, transparent 1px),
                  linear-gradient(90deg, rgba(251, 191, 36, 0.1) 1px, transparent 1px)
                `,
                backgroundSize: '40px 40px',
                animation: 'gridMove 20s linear infinite'
              }}
            />
          </div>
        )}

        {/* Tech Particles - —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ */}
        {showFullAnimation && (
          <div className="absolute inset-0">
            {[...Array(12)].map((_, i) => (
              <motion.div
                key={i}
                className={`absolute w-1 h-1 rounded-full ${i % 2 === 0 ? 'bg-yellow-400' : 'bg-[#4cc3a5]'}`}
                initial={{ 
                  x: Math.random() * window.innerWidth,
                  y: Math.random() * window.innerHeight,
                  opacity: 0
                }}
                animate={{ 
                  x: Math.random() * window.innerWidth,
                  y: Math.random() * window.innerHeight,
                  opacity: [0, 1, 0]
                }}
                transition={{ 
                  duration: 4 + Math.random() * 4,
                  repeat: Infinity,
                  delay: Math.random() * 2
                }}
              />
            ))}
          </div>
        )}

        {/* Main Content Container */}
        <div className="relative z-10 flex items-center justify-center min-h-screen">
          <motion.div 
            className="text-center max-w-2xl px-8"
            initial={{ y: 50, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            transition={{ duration: 1, ease: "easeOut" }}
          >
            {/* Logo Section */}
            <motion.div
              initial={{ scale: 0.5, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              transition={{ duration: isNewPlayer ? 0.3 : 0.8, delay: isNewPlayer ? 0 : 0.2 }}
              className="mb-8"
            >
              {/* Tech Logo */}
              <div className="relative mx-auto w-24 h-24 mb-6">
                <div className="absolute inset-0 bg-gradient-to-br from-yellow-400 via-yellow-500 to-yellow-600 rounded-2xl rotate-12 shadow-lg shadow-yellow-400/25"></div>
                <div className="absolute inset-1 bg-gradient-to-br from-slate-800 to-slate-900 rounded-xl flex items-center justify-center">
                  <div className="text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-yellow-400 to-yellow-500">
                    TC
                  </div>
                </div>
                {/* Rotating ring - —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ */}
                {showFullAnimation && (
                  <motion.div
                    className="absolute -inset-2 border-2 border-yellow-400/40 rounded-full"
                    animate={{ rotate: 360 }}
                    transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                  />
                )}
                {/* Pulsing glow effect - —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ */}
                {showFullAnimation && (
                  <motion.div
                    className="absolute -inset-3 bg-yellow-400/20 rounded-full blur-md"
                    animate={{ scale: [1, 1.1, 1], opacity: [0.3, 0.6, 0.3] }}
                    transition={{ duration: 3, repeat: Infinity, ease: "easeInOut" }}
                  />
                )}
              </div>

              {/* Title */}
              <motion.h1 
                className="text-5xl font-bold text-white mb-2"
                initial={{ letterSpacing: "0.5em", opacity: 0 }}
                animate={{ letterSpacing: "0.1em", opacity: 1 }}
                transition={{ duration: 1, delay: 0.5 }}
              >
                TYCOON CLICKER
              </motion.h1>
              
              <motion.div 
                className="text-lg text-[#4cc3a5] font-light tracking-widest uppercase"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.8 }}
              >
                Premium Experience
              </motion.div>
            </motion.div>



            {/* Loading Section */}
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 1.2 }}
              className="space-y-6"
            >
              {/* Progress Bar */}
              <div className="relative mb-8">
                <div className="h-3 bg-slate-700 rounded-full overflow-hidden border border-[#4cc3a5]/20">
                  <motion.div
                    className="h-full bg-gradient-to-r from-yellow-400 via-[#4cc3a5] to-yellow-500"
                    initial={{ width: "0%" }}
                    animate={{ width: `${progress}%` }}
                    transition={{ duration: 0.3, ease: "easeOut" }}
                  />
                  {/* Animated glow effect */}
                  <motion.div
                    className="absolute top-0 left-0 h-full w-20 bg-gradient-to-r from-transparent via-yellow-200/30 to-transparent"
                    animate={{ x: [-80, 320] }}
                    transition={{ duration: 2, repeat: Infinity, ease: "easeInOut" }}
                  />
                </div>
                <div className="absolute -top-1 -right-1 w-5 h-5 bg-yellow-400 rounded-full animate-pulse shadow-lg shadow-yellow-400/50"></div>
              </div>

              {/* Status Text */}
              <motion.div
                key={currentStep}
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                className="text-[#4cc3a5] font-medium text-center mb-6"
              >
                {currentStep}
              </motion.div>

              {/* Quote Section with more space */}
              <motion.div
                key={currentQuote}
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                className="text-yellow-400/80 text-base italic text-center px-4 py-6 min-h-[60px] flex items-center justify-center"
              >
                <span className="max-w-lg leading-relaxed">"{currentQuote}"</span>
              </motion.div>

              {/* Tech Details */}
              <div className="flex justify-center space-x-6 text-xs text-gray-500 mt-6">
                <div className="flex items-center gap-1">
                  <div className="w-2 h-2 bg-[#4cc3a5] rounded-full animate-pulse"></div>
                  <span>SECURE</span>
                </div>
                <div className="flex items-center gap-1">
                  <div className="w-2 h-2 bg-yellow-400 rounded-full animate-pulse"></div>
                  <span>ENCRYPTED</span>
                </div>
                <div className="flex items-center gap-1">
                  <div className="w-2 h-2 bg-[#4cc3a5] rounded-full animate-pulse"></div>
                  <span>OPTIMIZED</span>
                </div>
              </div>
            </motion.div>
          </motion.div>
        </div>

        {/* Corner Tech Elements */}
        <div className="absolute top-4 left-4 text-[#4cc3a5]/60 text-xs font-mono">
          TC://INIT_v2.1.0
        </div>
        <div className="absolute top-4 right-4 text-yellow-400/60 text-xs font-mono">
          {progress.toFixed(1)}%
        </div>
        <div className="absolute bottom-4 left-4 text-[#4cc3a5]/60 text-xs font-mono">
          SYSTEM.READY
        </div>
        <div className="absolute bottom-4 right-4 text-yellow-400/60 text-xs font-mono">
          WIZA.PREMIUM
        </div>

      </motion.div>

      {/* –ù–∏–∂–Ω–∏–π –±–∞–Ω–Ω–µ—Ä –≤ –∑–∞—Å—Ç–∞–≤–∫–µ */}
      <div className="fixed bottom-0 left-0 right-0 z-50 bg-gradient-to-r from-purple-900 to-indigo-900 border-t border-purple-400/30">
        <div className="h-[60px] flex items-center justify-center text-white text-sm">
          <div className="flex items-center gap-3">
            <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
            <span className="font-medium">Advertisement Space</span>
            <div className="px-2 py-1 bg-white/10 rounded text-xs">AdSense</div>
          </div>
        </div>
        
        {/* –°–∫—Ä—ã—Ç—ã–π AdSense –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
        <ins 
          className="adsbygoogle"
          style={{ display: 'none' }}
          data-ad-client="ca-pub-4328087894770041"
          data-ad-slot="5243095999"
          data-ad-format="auto"
          data-full-width-responsive="true"
        />
      </div>
    </AnimatePresence>
  );
}